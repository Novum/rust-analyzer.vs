# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: CDP

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    branches: [master]

env:
  VsixFileName: RustAnalyzer.vsix
  SolutionPath: src\RustAnalyzer.sln
  VsixManifestPath: src\RustAnalyzer\source.extension.vsixmanifest
  VsixManifestSourcePath: src\RustAnalyzer\source.extension.cs

jobs:
  build-test-deploy:
    outputs:
      version: ${{ steps.vsix_version.outputs.version-number }}
    name: Build, Test & Deploy
    runs-on: windows-2022
    env:
      Configuration: Release
      DeployExtension: False
      OutDir: \_built

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET build dependencies
      uses: timheuer/bootstrap-dotnet@v1
      with:
        nuget: 'false'
        sdk: 'false'
        msbuild: 'true'

    - name: Increment VSIX version
      id: vsix_version
      uses: timheuer/vsix-version-stamp@v1
      with:
        manifest-file: ${{ env.VsixManifestPath }}
        vsix-token-source-file: ${{ env.VsixManifestSourcePath }}

    - name: Build
      run: msbuild $env:SolutionPath /m /t:rebuild /restore /p:OutDir=$env:OutDir

    - name: Test
      uses: microsoft/vstest-action@v1.0.0
      with:
        testAssembly: '*.UnitTests.dll'
        searchFolder: \_built\
        runInParallel: true

    - name: Test Report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Tests Results
        path: "${{ env.GITHUB_WORKSPACE }}/TestResults/*.trx"
        reporter: dotnet-trx
        fail-on-error: true

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ github.event.repository.name }}.zip
        path: \_built\${{ env.VsixFileName }}
        if-no-files-found: error

  publish:
    name: Publish
    if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
    needs: build-test-deploy
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Download Package artifact
        id: download
        uses: actions/download-artifact@v3
        with:
          name: ${{ github.event.repository.name }}.zip

      - name: Upload to Open VSIX
        uses: timheuer/openvsixpublish@v1
        with:
          vsix-file: '${{ steps.download.outputs.download-path }}\\${{ env.VsixFileName }}'

      - name: Tag and Release
        if: ${{ github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '[release]') }}
        id: tag_release
        uses: softprops/action-gh-release@v0.1.15
        with:
          generate_release_notes: true
          tag_name: ${{ needs.build-test-deploy.outputs.version }}
          name: Release ${{ needs.build-test-deploy.outputs.version }}
          files: |
            ${{ steps.download.outputs.download-path }}/**/*.vsix

      - name: Publish extension to Marketplace
        if: ${{ github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '[release]') }}
        uses: cezarypiatek/VsixPublisherAction@0.1
        with:
          extension-file: '${{ steps.download.outputs.download-path }}\\${{ env.VsixFileName }}'
          publish-manifest-file: 'vs-publish.json'
          personal-access-code: ${{ secrets.VS_PUBLISHER_ACCESS_TOKEN }}
